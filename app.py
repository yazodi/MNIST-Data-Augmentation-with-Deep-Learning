import streamlit as st
import tensorflow as tf
import numpy as np
from PIL import Image
import matplotlib.pyplot as plt

# Modeli yÃ¼kle
model = tf.keras.models.load_model("mnist_augmented_model.h5")

# BaÅŸlÄ±k
st.title("ğŸ§  MNIST GÃ¶rÃ¼ntÃ¼ ArtÄ±rma ve Tahmin")

# GÃ¶rsel yÃ¼kleme
uploaded_file = st.file_uploader("Bir el yazÄ±sÄ± rakam gÃ¶rseli yÃ¼kleyin (28x28, PNG/JPG)", type=["png", "jpg", "jpeg"])

if uploaded_file is not None:
    # GÃ¶rseli gÃ¶ster
    image = Image.open(uploaded_file).convert('L').resize((28, 28))
    st.image(image, caption="Orijinal GÃ¶rsel", width=150)

    # GÃ¶rseli normalize et
    img_array = np.array(image).astype("float32") / 255.0
    img_array = np.expand_dims(img_array, axis=-1)  # (28,28,1)
    img_array = np.expand_dims(img_array, axis=0)   # (1,28,28,1)

    # GÃ¶rÃ¼ntÃ¼ artÄ±rma
    def augment(image):
        image = tf.image.random_flip_left_right(image)
        image = tf.image.random_brightness(image, max_delta=0.1)
        image = tf.image.random_contrast(image, 0.8, 1.2)
        return image

    augmented_img = augment(tf.convert_to_tensor(img_array[0])).numpy()

    # GÃ¶rselleri yan yana gÃ¶ster
    col1, col2 = st.columns(2)
    col1.image(img_array[0].squeeze(), caption="Orijinal", use_column_width=True, clamp=True)
    col2.image(augmented_img.squeeze(), caption="ArtÄ±rÄ±lmÄ±ÅŸ", use_column_width=True, clamp=True)

    # Tahmin yap
    prediction = model.predict(img_array)
    predicted_class = np.argmax(prediction)

    st.markdown(f"### ğŸ§¾ Modelin Tahmini: **{predicted_class}**")
